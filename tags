!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/bffbf46/
;	roles/vim/files/vimrc	/^nnoremap ; :                                                                    $/;"	m
<	roles/vim/files/vimrc	/^vnoremap < <gv                                                                  $/;"	m
<C-@><C-@>c	roles/vim/files/cscope_maps.vim	/^    nmap <C-@><C-@>c :vert scs find c <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>d	roles/vim/files/cscope_maps.vim	/^    nmap <C-@><C-@>d :vert scs find d <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>e	roles/vim/files/cscope_maps.vim	/^    nmap <C-@><C-@>e :vert scs find e <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>f	roles/vim/files/cscope_maps.vim	/^    nmap <C-@><C-@>f :vert scs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-@><C-@>g	roles/vim/files/cscope_maps.vim	/^    nmap <C-@><C-@>g :vert scs find g <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>i	roles/vim/files/cscope_maps.vim	/^    nmap <C-@><C-@>i :vert scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>	$/;"	m
<C-@><C-@>s	roles/vim/files/cscope_maps.vim	/^    nmap <C-@><C-@>s :vert scs find s <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>t	roles/vim/files/cscope_maps.vim	/^    nmap <C-@><C-@>t :vert scs find t <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@>c	roles/vim/files/cscope_maps.vim	/^    nmap <C-@>c :scs find c <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>d	roles/vim/files/cscope_maps.vim	/^    nmap <C-@>d :scs find d <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>e	roles/vim/files/cscope_maps.vim	/^    nmap <C-@>e :scs find e <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>f	roles/vim/files/cscope_maps.vim	/^    nmap <C-@>f :scs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-@>g	roles/vim/files/cscope_maps.vim	/^    nmap <C-@>g :scs find g <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>i	roles/vim/files/cscope_maps.vim	/^    nmap <C-@>i :scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>	$/;"	m
<C-@>s	roles/vim/files/cscope_maps.vim	/^    nmap <C-@>s :scs find s <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>t	roles/vim/files/cscope_maps.vim	/^    nmap <C-@>t :scs find t <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>c	roles/vim/files/cscope_maps.vim	/^    nmap <C-\\>c :cs find c <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>d	roles/vim/files/cscope_maps.vim	/^    nmap <C-\\>d :cs find d <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>e	roles/vim/files/cscope_maps.vim	/^    nmap <C-\\>e :cs find e <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>f	roles/vim/files/cscope_maps.vim	/^    nmap <C-\\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-\\>g	roles/vim/files/cscope_maps.vim	/^    nmap <C-\\>g :cs find g <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>i	roles/vim/files/cscope_maps.vim	/^    nmap <C-\\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>$/;"	m
<C-\\>s	roles/vim/files/cscope_maps.vim	/^    nmap <C-\\>s :cs find s <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>t	roles/vim/files/cscope_maps.vim	/^    nmap <C-\\>t :cs find t <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-h>	roles/vim/files/vimrc	/^map <C-h> <C-w>h                            " Pane left                         $/;"	m
<C-j>	roles/vim/files/vimrc	/^map <C-j> <C-w>j                            " Pane down                          $/;"	m
<C-k>	roles/vim/files/vimrc	/^map <C-k> <C-w>k                            " Pane up                    $/;"	m
<C-l>	roles/vim/files/vimrc	/^map <C-l> <C-w>l                            " Pane right                        $/;"	m
<Down>\t:resize	roles/vim/files/vimrc	/^	nnoremap <Down>	:resize -2<CR>$/;"	m
<Leader>/	roles/vim/files/vimrc	/^nmap <silent> <Leader>\/ :nohlsearch<CR>     " Clear search highlighting         $/;"	m
<Leader><t>	roles/vim/files/vimrc	/^map <Leader><t> <CTRL-]>$/;"	m
<Leader>i	roles/vim/files/vimrc	/^nmap <Leader>i :TagbarToggle<CR>$/;"	m
<Leader>m	roles/vim/files/vimrc	/^map <Leader>m <esc>:tabnext<CR>                                                 $/;"	m
<Leader>n	roles/vim/files/vimrc	/^map <Leader>n <esc>:tabprevious<CR>                                             $/;"	m
<Leader>t	roles/vim/files/vimrc	/^map <Leader>t :NERDTreeToggle<CR>$/;"	m
<Leader>v	roles/vim/files/vimrc	/^nnoremap <silent> <Leader>v :NERDTreeFind<CR>$/;"	m
<Left>\t:vertical	roles/vim/files/vimrc	/^	nnoremap <Left>	:vertical resize +2<CR>$/;"	m
<Right>\t:vertical	roles/vim/files/vimrc	/^	nnoremap <Right>	:vertical resize -2<CR>$/;"	m
<Up>\t:resize	roles/vim/files/vimrc	/^	nnoremap <Up>	:resize +2<CR>$/;"	m
>	roles/vim/files/vimrc	/^vnoremap > >gv                                                                  $/;"	m
BLUE	extras/plistinfo.py	/^BLUE = '\\033[94m'$/;"	v
BOLD	extras/plistinfo.py	/^BOLD = '\\033[1m'$/;"	v
DOCUMENTATION	library/plist.py	/^DOCUMENTATION = '''$/;"	v
Downloads	roles/macos/files/README.md	/^Downloads$/;"	s
ENDC	extras/plistinfo.py	/^ENDC = '\\033[0m'$/;"	v
EXAMPLES	library/plist.py	/^EXAMPLES = '''$/;"	v
GREEN	extras/plistinfo.py	/^GREEN = '\\033[92m'$/;"	v
Installation	roles/macos/files/README.md	/^Installation$/;"	s
NERDTreeShowHidden	roles/vim/files/vimrc	/^let NERDTreeShowHidden=1 " show hidden files$/;"	v
RED	extras/plistinfo.py	/^RED = '\\033[91m'$/;"	v
Solarized - OS X 10.7+ Terminal.App color theme	roles/macos/files/README.md	/^Solarized - OS X 10.7+ Terminal.App color theme$/;"	c
The Values	roles/macos/files/README.md	/^The Values$/;"	s
Visit the [Solarized homepage]	roles/macos/files/README.md	/^Visit the [Solarized homepage]$/;"	s
XipArchive	library/extract_xip.py	/^class XipArchive(object):$/;"	c
YELLOW	extras/plistinfo.py	/^YELLOW = '\\033[93m'$/;"	v
__init__	library/extract_xip.py	/^    def __init__(self, src="", dest="", module=None):$/;"	m	class:XipArchive
_extract_xz_archive	library/extract_xip.py	/^    def _extract_xz_archive(self, file_name):$/;"	m	class:XipArchive
_seekread	library/extract_xip.py	/^    def _seekread(self, f, offset=None, length=0, relative=True):$/;"	m	class:XipArchive
_split_file	library/extract_xip.py	/^    def _split_file(self, src):$/;"	m	class:XipArchive
_unpack_pbxz_stream	library/extract_xip.py	/^    def _unpack_pbxz_stream(self, file_name):$/;"	m	class:XipArchive
ansible-go-boot-boot	README.md	/^# ansible-go-boot-boot$/;"	c
base16colorspace	roles/vim/files/vimrc	/^let base16colorspace=256 "access colors present in 256 colorspace$/;"	v
bg	roles/tmux/files/tmux-mac.conf	/^set -g window-status-current-format "#[fg=black, bg=red] #I #[fg=black,bg=red]#W#[fg=red]#F "$/;"	k
bind	roles/tmux/files/tmux-mac.conf	/^bind = select-layout tiled$/;"	k
bind	roles/tmux/files/tmux.conf	/^bind = select-layout tiled$/;"	k
c	roles/zsh/aliases.zsh	/^alias c="clear"$/;"	a
cl	roles/zsh/aliases.zsh	/^alias cl='clear'$/;"	a
determine_plist_path	extras/plistinfo.py	/^def determine_plist_path(destination):$/;"	f
do_plist	library/plist.py	/^def do_plist(module, filename, values, backup=False):$/;"	f
equal	library/plist.py	/^def equal(slave, master):$/;"	f
extract	library/extract_xip.py	/^    def extract(self):$/;"	m	class:XipArchive
extract	roles/zsh/functions.zsh	/^extract () {$/;"	f
g:airline#extensions#tabline#enabled	roles/vim/files/vimrc	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline_powerline_fonts	roles/vim/files/vimrc	/^let g:airline_powerline_fonts = 1$/;"	v
g:airline_theme	roles/vim/files/vimrc	/^let g:airline_theme='hybrid'$/;"	v
g:elite_mode	roles/vim/files/vimrc	/^let g:elite_mode=1$/;"	v
g:hybrid_custom_term_colors	roles/vim/files/vimrc	/^let g:hybrid_custom_term_colors = 1$/;"	v
g:hybrid_reduced_contrast	roles/vim/files/vimrc	/^let g:hybrid_reduced_contrast = 1$/;"	v
g:spacegray_italicize_comments	roles/vim/files/vimrc	/^let g:spacegray_italicize_comments = 1$/;"	v
g:spacegray_underline_search	roles/vim/files/vimrc	/^let g:spacegray_underline_search = 1$/;"	v
is_vim	roles/tmux/files/tmux-mac.conf	/^is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\\\/)g?(view|n?vim?)(diff)?$"'$/;"	k
is_vim	roles/tmux/files/tmux.conf	/^is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\\\/)g?(view|n?vim?)(diff)?$"'$/;"	k
lj	roles/zsh/aliases.zsh	/^alias lj='jobs'$/;"	a
main	extras/plistinfo.py	/^def main():$/;"	f
main	library/extract_xip.py	/^def main():$/;"	f
main	library/plist.py	/^def main():$/;"	f
mapleader	roles/vim/files/vimrc	/^let mapleader = ","     " LEADER Key                                            $/;"	v
pg	roles/zsh/aliases.zsh	/^alias pg='ps -ef | grep'$/;"	a
pubkey	roles/zsh/aliases.zsh	/^alias pubkey="more ~\/.ssh\/id_rsa.pub | pbcopy | echo '=> Public key copied to pasteboard.'"$/;"	a
reload	roles/zsh/aliases.zsh	/^alias reload!='. ~\/.zshrc'$/;"	a
scratch	roles/zsh/functions.zsh	/^function scratch {$/;"	f
t	roles/tmux/files/tmux-mac.conf	/^bind-key -n C-S-Left select-window -t :-$/;"	k
t	roles/tmux/files/tmux-mac.conf	/^bind-key -n C-S-Right select-window -t :+$/;"	k
t	roles/tmux/files/tmux.conf	/^bind h select-window -t :-$/;"	k
t	roles/tmux/files/tmux.conf	/^bind l select-window -t :+$/;"	k
t	roles/tmux/files/tmux.conf	/^bind-key -n C-S-Left select-window -t :-$/;"	k
t	roles/tmux/files/tmux.conf	/^bind-key -n C-S-Right select-window -t :+$/;"	k
t	roles/tmux/files/tmux.conf	/^bind-key -r C-h select-window -t :-$/;"	k
t	roles/tmux/files/tmux.conf	/^bind-key -r C-l select-window -t :+$/;"	k
update	library/plist.py	/^def update(plist, working_values):$/;"	f
v	roles/zsh/aliases.zsh	/^alias v="vim"$/;"	a
vi	roles/zsh/aliases.zsh	/^alias vi="vim"$/;"	a
